<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>
<?rfc authorship="yes"?>
<?rfc tocappendix="yes"?>
<rfc  xmlns:xi="http://www.w3.org/2001/XInclude" category="std" ipr='trust200902' tocInclude="true"  obsoletes="" updates='6550, 8505' consensus="true" submissionType="IETF" xml:lang="en" version="3" docName="draft-ietf-roll-unaware-leaves-17" >

<front>


    <title abbrev='RPL Unaware Leaves'>Routing for RPL Leaves</title>
   <author initials='P' surname='Thubert' fullname='Pascal Thubert' role='editor'>
      <organization abbrev='Cisco Systems'>Cisco Systems, Inc</organization>
      <address>
         <postal>
            <street>Building D</street>
            <street>45 Allee des Ormes - BP1200 </street>
            <city>Mougins - Sophia Antipolis</city>
            <code>06254</code>
          <country>France</country>
         </postal>
         <phone>+33 497 23 26 34</phone>
         <email>pthubert@cisco.com</email>
      </address>
   </author>



 <author fullname='Michael C. Richardson' initials='M.' surname='Richardson'>
   <organization abbrev='Sandelman'>Sandelman Software Works</organization>

   <address>
     <email>mcr+ietf@sandelman.ca</email>

     <uri>http://www.sandelman.ca/</uri>
   </address>
 </author>

<date/>
<area>Routing</area>
<workgroup>ROLL</workgroup>


<abstract>
<t>
  This specification extends RFC6550 and RFC8505 to provide routing services
  to Hosts called RPL Unaware Leaves that implement 6LoWPAN ND but do not
  participate to RPL.  This specification also enables the RPL Root to
  proxy the 6LoWPAN keep-alive flows in its DODAG.
</t>
</abstract>


</front>

<middle>


<section anchor='introduction'><name>Introduction</name>

<t>The design of Low Power and Lossy Networks (LLNs) is generally focused on
   saving energy, which is the most constrained resource of all. Other design
   constraints, such as a limited memory capacity, duty cycling of the LLN
   devices and low-power lossy transmissions, derive from that primary concern.
</t>


<t>The IETF produced the <xref target='RFC6550'>"Routing Protocol for Low Power
   and Lossy Networks"</xref> (RPL) to provide IPv6 <xref target='RFC8200'/>
   routing services within such constraints. RPL belongs to the class of
   Distance-Vector protocols, which, compared to link-state protocols,
   limit the amount of topological knowledge that needs to be installed and
   maintained in each node.
</t>
<t> To save signaling and routing state in constrained networks,
   RPL allows a routing stretch (see <xref target='RFC6687'/>), whereby routing
   is only performed along an acyclic graph optimized to reach a Root node,
   as opposed to straight along a shortest path
   between 2 peers, whatever that would mean in a given LLN.
   This trades the quality of peer-to-peer (P2P) paths for a vastly reduced
   amount of control traffic and routing state that would be required to
   operate a any-to-any shortest path protocol.
   Finally, broken routes may be fixed lazily and on-demand, based on dataplane
   inconsistency discovery, which avoids wasting energy in the proactive repair
   of unused paths.

</t><t>
   To provide alternate paths in lossy networks, RPL forms Direction-Oriented
   Directed Acyclic Graphs (DODAGs) using DODAG Information Solicitation (DIS)
   and DODAG Information Object (DIO) messages. For many of the nodes, though
   not all, a DODAG provides multiple forwarding solutions towards the Root of
   the topology via so-called parents.
   RPL is designed to adapt to fuzzy connectivity, whereby the physical topology
   cannot be expected to reach a stable state, with a lazy control that creates
   the routes proactively, but may only fix them reactively, upon actual traffic.
   The result is that RPL provides reachability for most of the LLN nodes, most
   of the time, but may not converge in the classical sense.
</t>
<t>
   <xref target='RFC6550'/> provides unicast and multicast routing services
   to RPL-Aware nodes (RANs), either as a collection tree or with routing
   back. In the latter case, an RAN injects routes to itself using Destination
   Advertisement Object (DAO) messages sent either to parent-nodes, in the RPL
   Storing Mode, or to the Root indicating their parent, in the Non-Storing Mode.

   This process effectively forms a DODAG back to the device that is a subset of
   the DODAG to the Root with all links reversed.
</t>
<t>
   RPL can be deployed as an extension to IPv6 Neighbor Discovery (ND)
   <xref target='RFC4861'/><xref target='RFC4862'/> and 6LoWPAN ND
   <xref target='RFC6775'/><xref target='RFC8505'/> to maintain reachability
   within a Non-Broadcast Multi-Access (NBMA) subnet.
   In that mode, some nodes may act as Routers and
   participate to the forwarding operations whereas others will only terminate
   packets, acting as Hosts in the data-plane.
   In <xref target='RFC6550'/> terms, a Host that is reachable over the RPL
   network is called a Leaf.
</t>
<t>
   <xref target='I-D.ietf-roll-useofrplinfo'>
   "When to use RFC 6553, 6554 and IPv6-in-IPv6"</xref> introduces the term
   RPL-Aware-Leaf (RAL) for a Leaf that injects routes in RPL to manage the
   reachability of its own IPv6 addresses.
   In contrast, the term RPL-Unaware Leaf (RUL) designates a Leaf that does not
   participate to RPL at all. A RUL is an IPv6 Host <xref target="RFC8504" />
   that needs a RPL-Aware Router to obtain routing services over the RPL network.

</t>
<t>
   This specification leverages the Address Registration mechanism defined in
   6LoWPAN ND to enable a RUL as a 6LoWPAN Node (6LN) to interface with a
   RPL-Aware Router as a 6LoWPAN Router (6LR) to request that the 6LR injects
   the relevant routing information for the Registered Address in the RPL domain
   on its behalf.
   A RUL may be unable to participate because it is very energy-constrained,
   or because it is unsafe to let it inject routes in RPL, in which case using
   6LowPAN ND as the interface for the RUL limits the surface of the possible
   attacks and optionally protects the address ownership.
</t>
<t>
   The Non-Storing Mode mechanisms are used to extend the routing state with
   connectivity to RULs even when the DODAG is operated in Storing Mode DODAGs.
   The unicast packet forwarding operation by the 6LR serving a 6LN that is a
   RPL Leaf is described in <xref target='I-D.ietf-roll-useofrplinfo'/>.
</t>
<t>
   Examples of routing-agnostic 6LNs include lightly-powered sensors such as
   window smash sensor (alarm system), and kinetically powered light switches.
   Other applications of this specification may include a smart grid network that
   controls appliances - such as washing machines or the heating system - in the
   home. Appliances may not participate to the RPL protocol operated in the
   Smartgrid network but can still interact with the Smartgrid for control and/or
   metering.

</t>


</section>

<section><name>Terminology</name>
<section anchor='bcp'><name>BCP 14</name>
<t>

    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
    "OPTIONAL" in this document are to be interpreted as described in BCP 14
 <xref target='RFC2119'/><xref target='RFC8174'/> when, and only when, they
    appear in all capitals, as shown here.

</t>
</section>	<!-- end section "BCP 14" -->


<section anchor='lo'><name>References</name>


<t>
   The Terminology used in this document is consistent with and incorporates
   that described in <xref target='RFC7102'>"Terms Used in Routing for Low-Power
   and Lossy Networks (LLNs)"</xref>.
   A glossary of classical 6LoWPAN acronyms is given in <xref target='gloss'/>.
   Other terms in use in LLNs are found in <xref target='RFC7228'>
   "Terminology for Constrained-Node Networks"</xref>.
</t>

<t>"RPL", the "RPL Packet Information" (RPI), "RPL Instance" (indexed by a
   RPLInstanceID) are defined in <xref target='RFC6550'>"RPL: IPv6 Routing
   Protocol for Low-Power and Lossy Networks"</xref>. The RPI is the abstract
   information that RPL defines to be placed in data packets, e.g., as the RPL
   Option <xref target='RFC6553'/> within the IPv6 Hop-By-Hop Header.
   By extension the term "RPI" is often used to refer to the RPL Option itself.
   The DODAG Information Solicitation (DIS), Destination Advertisement Object
   (DAO) and DODAG Information Object (DIO) messages are also specified in
   <xref target='RFC6550'/>. The Destination Cleanup Object (DCO) message
   is defined in <xref target='I-D.ietf-roll-efficient-npdao'/>.
</t><t>

   This document uses the terms RPL-Unaware Leaf (RUL) and RPL Aware Leaf
   (RAL) consistently with <xref target='I-D.ietf-roll-useofrplinfo'/>.
   The term RPL-Aware Node (RAN) is introduced to refer to a node that is either
   an RAL or a RPL Router. As opposed to a RUL, an RAN manages the reachability of
   its addresses and prefixes by injecting them in RPL by itself.
</t><t>


	In this document, readers will encounter terms and concepts
	that are discussed in the following documents:
	</t>
    <dl>
	<dt>Classical IPv6 ND:</dt><dd> <xref target='RFC4861'>"Neighbor Discovery for IP version 6"
		</xref> and
	    <xref target='RFC4862'>"IPv6 Stateless Address Autoconfiguration"
		</xref>, </dd>

	<dt>6LoWPAN:</dt><dd> <xref target='RFC6606'>"Problem Statement and Requirements for
		IPv6 over Low-Power Wireless Personal Area Network (6LoWPAN)
		Routing" </xref> and <xref target='RFC4919'>"IPv6 over Low-Power
	    Wireless Personal Area Networks (6LoWPANs): Overview, Assumptions,
	    Problem Statement, and Goals"</xref>, and</dd>
	<dt>6LoWPAN ND:</dt><dd> <xref target='RFC6775'>Neighbor Discovery Optimization for Low-Power
		and Lossy Networks</xref>,
	    <xref target='RFC8505'>
		"Registration Extensions for 6LoWPAN Neighbor Discovery"</xref>,
        and <xref target='I-D.ietf-6lo-ap-nd'>
        "Address Protected Neighbor Discovery for Low-power and Lossy Networks"
        </xref> .
	</dd>
	</dl>
</section>	<!-- end section "References" -->
<section anchor='gloss'><name>Glossary</name>
 <t> This document often uses the following acronyms:
    </t><dl  spacing='normal'>
    <dt>AR:</dt><dd>  Address Resolution (aka Address Lookup)  </dd>
    <dt>6CIO:</dt><dd> 6LoWPAN Capability Indication Option</dd>
    <dt>6LN:</dt><dd> 6LoWPAN Node (a Low Power Host or Router) </dd>
    <dt>6LR:</dt><dd> 6LoWPAN Router </dd>
    <dt>(E)ARO:</dt><dd> (Extended) Address Registration Option  </dd>
    <dt>(E)DAR:</dt><dd> (Extended) Duplicate Address Request  </dd>
    <dt>(E)DAC:</dt><dd> (Extended) Duplicate Address Confirmation </dd>
    <dt>DAD:</dt><dd> Duplicate Address Detection </dd>
    <dt>DAO:</dt><dd> Destination Advertisement Object (a RPL message) </dd>
    <dt>DCO:</dt><dd> Destination Cleanup Object (a RPL message) </dd>
    <dt>DIS:</dt><dd> DODAG Information Solicitation (a RPL message) </dd>
    <dt>DIO:</dt><dd> DODAG Information Object (a RPL message) </dd>
    <dt>DODAG:</dt><dd> Destination-Oriented Directed Acyclic Graph </dd>
    <dt>LLN:</dt><dd> Low-Power and Lossy Network </dd>
    <dt>NA:</dt><dd>  Neighbor Advertisement </dd>
    <dt>NCE:</dt><dd>  Neighbor Cache Entry  </dd>
    <dt>ND:</dt><dd>  Neighbor Discovery  </dd>
    <dt>NS:</dt><dd>  Neighbor Solicitation  </dd>
    <dt>RA:</dt><dd>  Router Advertisement  </dd>
    <dt>ROVR:</dt><dd> Registration Ownership Verifier </dd>
    <dt>RPI:</dt><dd> RPL Packet Information </dd>
    <dt>RAL:</dt><dd> RPL-Aware Leaf </dd>
    <dt>RAN:</dt><dd> RPL-Aware Node (either a RPL Router or a RPL-Aware Leaf) </dd>
    <dt>RUL:</dt><dd> RPL-Unaware Leaf</dd>
    <dt>TID:</dt><dd> Transaction ID (a sequence counter in the EARO) </dd>

    </dl><t>
 </t>
</section>	<!-- end section "Subset of a 6LoWPAN Glossary" -->

</section>	<!-- end section "Terminology" -->

<section anchor='lpnd'><name>6LoWPAN Neighbor Discovery</name>
<section anchor='R6775'><name>RFC 6775 Address Registration</name>

<t>
   The classical "IPv6 Neighbor Discovery (IPv6 ND) Protocol"
   <xref target='RFC4861'/> <xref target='RFC4862'/> was defined for transit
   media such a Ethernet. It is a reactive protocol that relies heavily on
   multicast operations for address discovery (aka lookup) and duplicate
   address detection (DAD).
</t><t>
   <xref target='RFC6775'>
   "Neighbor Discovery Optimizations for 6LoWPAN networks"</xref>
   adapts IPv6 ND for operations over energy-constrained LLNs.
   The main functions of <xref target='RFC6775'/> are to proactively establish
   the Neighbor Cache Entry (NCE) in the 6LR and to prevent address duplication.
   To that effect, <xref target='RFC6775'/> introduces a new unicast Address
   Registration  mechanism that contributes to reducing the use of multicast
   messages compared to the classical IPv6 ND protocol.

</t><t><xref target='RFC6775'/> defines a new Address
   Registration Option (ARO) that is carried in the unicast
   Neighbor Solicitation (NS) and Neighbor Advertisement (NA) messages between
   the 6LoWPAN Node (6LN) and the 6LoWPAN Router (6LR).

   It also defines the Duplicate Address Request (DAR) and Duplicate
   Address Confirmation (DAC) messages between the 6LR and the 6LoWPAN Border
   Router (6LBR).
   In an LLN, the 6LBR is the central repository of all the Registered Addresses
   in its domain and the source of truth for uniqueness and ownership.

   <!--There
   is no concept of registering the address for an external service.
-->
</t>

</section>	<!-- end section "RFC 6775" -->
<section anchor='R8505E'><name>RFC 8505 Extended Address Registration</name>

<t>
   <xref target='RFC8505'>
   "Registration Extensions for 6LoWPAN Neighbor Discovery"</xref>
   updates the behavior of RFC 6775 to enable a generic
   Address Registration to services such as routing and ND proxy, and defines the
   Extended Address Registration Option (EARO) as shown
   in <xref target='EARO'/>:
</t>
 <figure anchor='EARO'><name>EARO Option Format</name>
 <artwork align="center"> <![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     Type      |     Length    |    Status     |    Opaque     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Rsvd | I |R|T|     TID       |     Registration Lifetime     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
 ...             Registration Ownership Verifier                 ...
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    ]]></artwork>
 </figure>


<section anchor='R8505ER'><name>R Flag</name>
<t>
<xref target='RFC8505'/> introduces the "R" flag in the EARO.
   The Registering Node sets the "R" flag to indicate whether the 6LR should
   ensure reachability for the Registered Address.
   If the "R" flag is not set, then the Registering Node handles the reachability
   of the Registered Address by other means, which means in a RPL network that
   it is an RAN or that it uses another RPL Router for reachability services.
</t><t>
   This document specifies how the "R" flag is used in the context of RPL. A 6LN
   is a RUL that requires reachability services for an IPv6 address if and only
   if it sets the "R" flag in the NS(EARO) used to register the address to a RPL
   border router acting as 6LR. Upon receiving the NS(EARO), the RPL router
   generates a DAO message for the Registered Address if and only if the "R"
   flag is set.
</t>

</section> <!-- end section "R Flag" -->
<section anchor='R8505ETID'><name>TID, I Field and Opaque Fields</name>

<t>
   The EARO also includes a sequence counter called Transaction ID (TID),
   which maps to the Path Sequence Field found in Transit Options in RPL DAO
   messages. This is the reason why the support of <xref target='RFC8505'/>
   by the RUL as opposed to only <xref target='RFC6775'/> is a prerequisite for
   this specification (more in <xref target='prereq6lp'/>). The EARO also
   transports an Opaque field and an "I" field that describes what the Opaque
   field transports and how to use it. <xref target='ln'/> specifies the use of
   the "I" field and of the Opaque field by a RUL.
</t>

</section> <!-- end section "TID, I Field and Opaque Fields" -->
<section anchor='R8505EROVR'><name>ROVR</name>
<t>
   Section 5.3 of <xref target='RFC8505'/> introduces the Registration
   Ownership Verifier (ROVR) field of variable length from 64 to 256 bits.
   <!-- A ROVR is created by the Registering Node and associated to the Address Registration
   of an IPv6 Address. -->
   The ROVR is a replacement of the EUI-64 in the ARO
   <xref target='RFC6775'/> that was used to identify uniquely an Address
   Registration with the Link-Layer address of the owner, but provided no
   protection against spoofing.
</t><t>

   <xref target='I-D.ietf-6lo-ap-nd'>"Address Protected Neighbor Discovery for
   Low-power and Lossy Networks"</xref> leverages the ROVR field as a
   cryptographic proof of ownership to prevent a rogue third party from misusing
   the address.
   <xref target='I-D.ietf-6lo-ap-nd'/> adds a challenge/response exchange to the
   <xref target='RFC8505'/> Address Registration and enables Source Address Validation
   by a 6LR that will drop packets with a spoofed address.
</t><t>

   This specification does not address how the protection by
   <xref target='I-D.ietf-6lo-ap-nd'/> could be extended to RPL. On the other
   hand, it adds the ROVR to the DAO to build the proxied EDAR at the Root
   (see <xref target='tgt'/>),
   which means that nodes that are aware of the Host route to the 6LN are made
   aware of the associated ROVR as well.
</t>

</section> <!-- end section "ROVR" -->

</section> <!-- end section "RFC 8505 Extended ARO" -->
<section anchor='R8505D'><name>RFC 8505 Extended DAR/DAC</name>
<t>
   <xref target='RFC8505'/> updates the periodic DAR/DAC exchange that takes
   place between the 6LR and the 6LBR using Extended DAR/DAC messages which can
   carry a ROVR field of variable size.
   The exchange is triggered by an NS(EARO) message and is intended to create, refresh and delete the corresponding state in the 6LBR for a lifetime that is indicated by the 6LN.
   It is protected by the ARQ mechanism specified in 8.2.6 of <xref target='RFC6775'/>, though in an LLN, a duration longer than the RETRANS_TIMER <xref target='RFC4861'/> of 1 second may be necessary to cover the Turn Around Trip delay from the 6LR to the 6LBR.

</t><t>
   RPL <xref target='RFC6550'/> specifies a periodic DAO from the 6LN all the way to
   the Root that maintains the routing state in the RPL network for the lifetime
   indicated by the source of the DAO.
   This means that for each address, there are two keep-alive messages
   that traverse the whole network, one to the Root and one to the 6LBR.
</t><t>

   This specification removes the extraneous keep-alive across the LLN. The 6LR
   turns the periodic Address Registration from the RUL into a DAO message to
   the Root on every refresh, but it only generates the EDAR upon the first registration, for the purpose of DAD.
   Upon a refresher DAO, the Root proxies the EDAR exchange to refresh the state at the 6LBR on behalf of the 6LR, as illustrated in <xref target='fReg2'/>.
</t>

<section anchor='R7400'><name>RFC 7400 Capability Indication Option</name>

<t>
   <xref target='RFC7400'> "6LoWPAN-GHC: Generic Header Compression for IPv6
   over Low-Power Wireless Personal Area Networks (6LoWPANs)"</xref> defines the
   6LoWPAN Capability Indication Option (6CIO) that enables a node to expose its
   capabilities in Router Advertisement (RA) messages.

   <xref target='RFC8505'/> defines a number of bits in the 6CIO, in particular:
</t>
	<dl spacing='compact'>
	<dt>L:</dt><dd> Node is a 6LR.  </dd>
	<dt>E:</dt><dd> Node is an IPv6 ND Registrar -- i.e., it supports
			  registrations based on EARO.  </dd>
	<dt>P:</dt><dd> Node is a Routing Registrar, -- i.e., an IPv6 ND Registrar
         that also provides reachability services for the Registered Address.
         </dd>
	</dl>
 <figure anchor='CIO'><name>6CIO flags</name>
 <artwork align="center">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |   Length = 1  |     Reserved      |D|L|B|P|E|G|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           Reserved                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
 </figure>
 <t>

    A 6LR that can provide reachability services for a RUL in a RPL network
    as specified in this document SHOULD include a 6CIO in its RA messages and
    set the L, P and E flags as prescribed by <xref target='RFC8505'/>,
    see <xref target='prereq6lp'/> for the behavior of the RUL.
 </t>

</section> <!-- end section "RFC 7400 Capability Indication Option" -->

</section> <!-- end section "RFC 8505 Extended DAR/DAC" -->

</section> <!-- end section "6LoWPAN Neighbor Discovery" -->

<section anchor='upd'><name>Updating RFC 6550</name>
<t>
   This document specifies a new behavior whereby a 6LR injects DAO messages
   for unicast addresses (see <xref target='op'/>) and multicast addresses
   (see <xref target='multiop'/>) on behalf of leaves that are not aware of RPL.
   The addresses are exposed as external targets <xref target='RFC6550'/>.
   Per
   <xref target='I-D.ietf-roll-useofrplinfo'/>, an IP-in-IP encapsulation that
   terminates at the RPL Root is used to remove RPL artifacts and compression
   techniques that may not be processed correctly outside of the RPL domain.

</t><t>
   This document also synchronizes the liveness monitoring at the Root and the
   6LBR. A same value of lifetime is used for both, and a single keep-alive
   message, the RPL DAO, traverses the RPL network. A new behavior is introduced
   whereby the RPL Root proxies the EDAR message to the 6LBR on behalf of the
   6LR (more in <xref target='upd2'/>), for any 6LN, RUL or RAN.

</t><t>
   Section 6.7.7 of <xref target='RFC6550'/> introduces RPL Target Option, which
   can be used in RPL Control messages such as the DAO message to signal a
   destination prefix.
   <xref target='tgt'/> adds the capabilities to
   transport the ROVR field (see <xref target='R8505EROVR'/>) and the IPv6
   Address of the prefix advertiser when the Target is a shorter prefix,
   signaled by a new "F" flag.
   The position of the "F" flag is indicated in <xref target='iana-full'/>.
</t><t>
   Section 6.7.6 of <xref target='RFC6550'/> defines the DODAG Configuration
   option with reserved flags. This specification defines the new "Root Proxies
   EDAR/EDAC" (P) flag and consumes one of the reserved flags to encode it.
   The "P" flag is set to indicate that the Root performs the proxy operation
   and that it supports the Updated RPL Target Option (see <xref target='tgt'/>).
   The position of the "P" flag is indicated in <xref target='iana-conf'/>.

</t><t>
   Section 6.3.1 of <xref target='RFC6550'/> defines a 3-bit Mode of Operation
   (MOP) in the
   DIO Base Object. The new "P" flag is defined only for MOP value between 0 to
   6. For a MOP value of 7 or above, the flag MAY be redefined
   and MUST NOT be interpreted as "Root Proxies EDAR/EDAC" unless the
   specification of the MOP indicates to do so.

</t><t>
   The RPL Status defined in section 6.5.1 of <xref target="RFC6550"/>
   for use in the DAO-Ack message is extended to be used in the DCO messages
   <xref target='I-D.ietf-roll-efficient-npdao'/> as well. Furthermore, this
   specification enables to use a RPL Status to embed the IPv6 ND Status
   defined for use in the EARO, more in <xref target='stat'/>.

</t>
   <t>
   </t>

</section> <!-- end section "Updating RFC 6550" -->

<section anchor='upd2'><name>Updating RFC 8505</name>

<t>

   This document updates <xref target='RFC8505'/> to introduce the anonymous
   EDAR and NS(EARO) messages. The anonymous messages are used for backward
   compatibility. The anonymous messages are recognizable by a zero ROVR
   field and can only be used as a refresher for a pre-existing state associated
   to the Registered Address. More specifically, an anonymous message can only
   increase the lifetime and/or increment the TID of an existing state at the
   6LBR.
</t><t>
   Upon the renewal of a 6LoWPAN ND Address Registration, this specification
   changes the behavior of a RPL Router acting as 6LR for the registration. If
   the Root indicates the capability to proxy the EDAR/EDAC exchange to the 6LBR
   by setting the "P" flag, the 6LR refrains from sending the keep-alive EDAR
   message; if the Root is separated
   from the 6LBR, the Root regenerates the EDAR message to the 6LBR upon a DAO
   message that signals the liveliness of the Address. The regenerated message
   is anonymous if and only if the DAO is a legacy message that does not carry a ROVR as specified in <xref target='tgt'/>.
</t>

</section> <!-- end section "Updating RFC 8505" -->




<section anchor='prereq'><name>Requirements on the RPL-Unware Leaf</name>
<t>
   This document provides RPL routing for a RUL, that is a 6LN acting as an IPv6
   Host and not aware of RPL. Still, a minimal RPL-independent functionality is
   required from the RUL to obtain routing services.
</t>
 <section anchor='prereq6lp'><name>Support of 6LoWPAN ND</name>
<t>
   In order to obtain routing services from a 6LR, a RUL MUST implement
   <xref target='RFC8505'/> and set the "R" flag in the EARO.
   The RUL SHOULD support <xref target='I-D.ietf-6lo-ap-nd'/> and use it to
   protect the ownership of its addresses.
   The RUL MUST NOT
   request routing services from a 6LR that does not originate RA
   messages with a CIO that has the L, P, and E flags all set as
   discussed in <xref target='R7400'/>.
</t>
<t>
   A RUL that has multiple potential routers MUST prefer those that provide routing services.
   The RUL MUST register to all the 6LRs from which it desires routing services.
   If there are no available routers, the connection of the RUL fails.
   The Address Registrations SHOULD be performed in an RApid sequence, using the
   exact same EARO for a same Address. Gaps between the Address Registrations
   will invalidate some of the routes till the Address Registration finally
   shows on those routes as well.
</t>

<t><xref target='RFC8505'/> introduces error Status values in the NA(EARO)
   which can be received synchronously upon an NS(EARO) or asynchronously. The
   RUL MUST support both cases and MUST refrain from using the address
   when the Status value indicates a rejection.

</t>

</section> <!-- end section "Support of 6LoWPAN ND" -->
<section anchor='prereqv6'><name>External Routes and RPL Artifacts</name>

<t>
   Section 4.1 of <xref target='I-D.ietf-roll-useofrplinfo'/> provides a set of
   rules that MUST be followed for the routing operations to a RUL.
</t><t>
   A 6LR that is upgraded to act as a border router for external routes
   advertises them using Non-Storing Mode DAO messages that are unicast
   directly to the Root, even if the DODAG is operated in Storing Mode.
   Non-Storing Mode routes are not visible inside the RPL domain and all packets
   are routed via the Root. An upgraded Root tunnels the packets directly to the
   6LR that advertised the external route which decapsulates and forwards the
   original (inner) packet.
</t><t>
   The RPL Non-Storing Mode signaling and the associated IP-in-IP encapsulated
   packets are normal traffic for the intermediate Routers. The support
   of external routes only impacts the Root and the 6LR. It can be operated with
   legacy intermediate routers and does not add to the amount of state that must
   be maintained in those routers.
   A RUL is an example of a destination that is reachable via an external route
   which happens to be a Host route.
</t><t>
   The RPL data packets always carry a Hop-by-Hop Header to transport a RPL
   Packet Information (RPI) <xref target='RFC6550'/>.
   So unless the RUL originates its packets with an RPI, the 6LR needs to tunnel
   them to the Root to add the RPI. As a rule of a thumb and except for the very
   special case above, the packets from and to a RUL are always encapsulated
   using an IP-in-IP tunnel between the Root and the 6LR that serves the RUL
   (see sections 7.1.4, 7.2.3, 7.2.4, 7.3.3, 7.3.4, 8.1.3, 8.1.4, 8.2.3,
   8.2.4, 8.3.3 and 8.3.4 of <xref target='I-D.ietf-roll-useofrplinfo'/> for details).
</t><t>
   In Non-Storing Mode, packets going down carry a Source Routing Header (SRH).
   The IP-in-IP encapsulation, the RPI and the SRH are collectively called the
   "RPL artifacts" and can be compressed using <xref target='RFC8138'/>.
   <xref target='rtghc'/> presents an example compressed format for a packet
   forwarded by the Root to a RUL in a Storing Mode DODAG.
</t><t>
   The inner packet that is forwarded to the RUL may carry some RPL artifacts,
   e.g., an RPI if the original packet was generated with it and possibly an SRH
   in a Non-Storing Mode DODAG.
   <xref target='I-D.ietf-roll-useofrplinfo'/> expects the RUL to support the
   basic <xref target='RFC8504'>"IPv6 Node Requirements"</xref>.
   In particular the RUL is expected to ignore the RPL artifacts that are
   either consumed or not applicable to a Host.
   <!--
   Such a host may not necessarily ignore IP-in-IP encapsulation, which is
   dealt with below.
   -->

</t><t>
   A RUL is not expected to support the compression method defined in
   <xref target='RFC8138'/>. Unless configured otherwise, the border
   router MUST uncompress the outgoing packet before forwarding over an external
   route, even if it is not the destination of the incoming packet, and even
   when delivering to a RUL.

</t>
<section anchor='prereqv6ip'><name>Support of IPv6 Encapsulation</name>

<t>
   Section 2.1 of <xref target='I-D.ietf-roll-useofrplinfo'/> sets the rules
   for forwarding IP-in-IP either to the final 6LN or to a parent 6LR.
   In order to enable IP-in-IP to the 6LN in Non-Storing Mode, the 6LN must be
   able to decapsulate the tunneled packet and either drop the inner packet if
   it is not the final destination, or pass it to the upper layer for further
   processing. Unless it is aware that the RUL can handle IP-in-IP properly, the
   Root that encapsulates a packet to a RUL terminates the IP-in-IP tunnel at
   the parent 6LR . For that reason, it is beneficial but not necessary for a
   RUL to support IP-in-IP.
</t>

</section> <!-- end section "Support of IPv6 Encapsulation" -->
<section anchor='prereqv6hh'><name>Support of the HbH Header</name>
<t>
   A RUL is expected to process an unknown Option Type in a
   Hop-by-Hop Header as prescribed by section 4.2 of <xref target='RFC8200'/>.
   This means in particular that an RPI with an Option Type of 0x23
   <xref target='I-D.ietf-roll-useofrplinfo'/> is ignored when not
    understood.
</t>

</section> <!-- end section "Support of the HbH Header" -->
<section anchor='prereqv6rh'><name>Support of the Routing Header</name>

<t>
   A RUL is expected to process an unknown Routing Header Type as
   prescribed by section 4.4 of <xref target='RFC8200'/>.
   This means in particular that Routing Header with a Routing Type of 3
   <xref target='RFC6554'/> is ignored when the Segments Left is zero, and
   the packet is dropped otherwise.
</t>

</section><!-- end section "Support of the Routing Header" -->


</section> <!-- end section "External Routes and RPL Artifacts" -->
</section> <!-- "Requirements to be a RPL-Unware Leaf" -->


<section anchor='stat'><name>Updated RPL Status</name>

    <t>The RPL Status is defined in section 6.5.1 of <xref target="RFC6550"/>
    for use in the DAO-Ack message and values are assigned as follows:</t>

   <table anchor="irplStatusbl"><name>RPL Status per RFC 6550</name>
   <thead>
      <tr><td>Range</td><td>Meaning</td></tr>
   </thead><tbody>
      <tr><td>0</td><td>Success/Unqualified acceptance</td></tr>
      <tr><td>1-127</td><td>Not an outright rejection</td></tr>
      <tr><td>128-255</td><td>Rejection</td></tr>
   </tbody>
   </table>
    <t>
    This specification extends the scope of the RPL Status to be used in RPL DCO
    messages. Furthermore, this specification enables to carry the IPv6 ND
    Status values defined for use in the EARO and initially listed in table 1
    of <xref target="RFC8505"/> in a RPL Status.

    </t>
    <t>
    <xref target="iana-aro"/> reduces the range of EARO Status values to 0-63
    ensure that they fit within a RPL Status as shown in <xref target="rpst"/>.
    </t>
 <figure anchor='rpst' suppress-title='false'><name>RPL Status Format</name>
       <artwork align="center" name="" type="" alt="">
    0
    0 1 2 3 4 5 6 7
   +-+-+-+-+-+-+-+-+
   |E|A|  Value    |
   +-+-+-+-+-+-+-+-+
</artwork>
 </figure>
  <t> RPL Status subfields:
	</t><dl  spacing='normal'>
	<dt>E:</dt><dd> 1-bit flag. Set to indicate a rejection. When not set, a value of 0
    indicates Success/Unqualified acceptance and other values indicate "not an
    outright rejection" as per RFC 6550.</dd>
	<dt>A:</dt><dd> 1-bit flag. Indicates the type of the Status value.</dd>
	<dt>Status Value:</dt><dd> 6-bit unsigned integer. If the 'A' flag is set this
    field transports a Status value defined for IPv6 ND EARO. When the 'A' flag
    is not set, the Status value is defined in a RPL extension.</dd>
	</dl>
   <t>
   When building a DCO or a DAO-ACK message upon an IPv6 ND NA or a EDAC message,
   the RPL Root MUST copy the ND Status unchanged in a RPL Status with the 'A'
   bit set. The RPL Root MUST set the 'E' flag for all values in range 1-10
   which are all considered rejections.
   </t>
   <t>
   Conversely, the 6LR MUST copy the value of the RPL Status unchanged in the
   EARO of an NA message that is built upon a RPL Status with the 'A' bit
   set in a DCO or a DAO-ACK message.
    </t>

</section><!-- Updated RPL Status -->


<section anchor='tgt'><name>Updated RPL Target option</name>
<t> This specification updates the RPL Target option to transport the ROVR.
    This enables the RPL Root to generate a full EDAR message as opposed to an
    anonymous EDAR that has restricted properties.
   </t>
   <t>
   The new "F" flag is set to indicate that the Target Prefix field contains the address of the advertising node in full, in which case the length of the
   Target Prefix field is 16 bytes regardless of the value of the Prefix Length field. If the "F" flag is reset, the Target Prefix field  MUST be aligned to
   the next byte boundary after the size (expressed in bits) indicated by the
   Prefix Length field. Padding bits are reserved and set to 0 a prescribed by
   section 6.7.7 of <xref target='RFC6550'/>.
   </t>
   <t>
    With this specification the ROVR is the remainder of the RPL Target Option.
    The size of the ROVR is indicated in a new ROVR Size field that is encoded
    to map one-to-one with the Code Suffix in the EDAR message
    (see table 4 of <xref target='RFC8505'/>).
   </t>
   <t>
    The modified format is illustrated in <xref target='frpltgt'/>.
    It is backward compatible with the Target Option in
    <xref target='RFC6550'/> and SHOULD be used as a replacement.
 </t>

 <figure anchor='frpltgt' suppress-title='false'><name>Updated Target Option</name>
 <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Type = 0x05 | Option Length |ROVRsz |F|Flags| Prefix Length |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                Target Prefix (Variable Length)                |
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
  ...            Registration Ownership Verifier (ROVR)           ...
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
 </figure>
 <t> New fields:
	</t><dl  spacing='normal'>
	<dt>ROVRsz:</dt><dd> Indicates the Size of the ROVR.
                        It MAY be 1, 2, 3, or 4, denoting a ROVR size of
                        64, 128, 192, or 256 bits, respectively. </dd>
	<dt>F:</dt><dd> 1-bit flag. Set to indicate that Target Prefix field
    contains an Address of prefix advertiser in full. </dd>

    <dt>Registration Ownership Verifier (ROVR):</dt><dd>
                  This is the same field as in the EARO,
                  see <xref target='RFC8505'/> </dd>
	</dl>
</section>
<section anchor='op'><name>Protocol Operations for Unicast Addresses</name>

<t>
  The description below assumes that the Root sets the "P" flag in the
  DODAG Configuration Option and performs the EDAR proxy operation.
</t>

<section anchor='flow'><name>General Flow</name>

  <t>
   This specification eliminates the need to exchange keep-alive Extended
   Duplicate Address messages, EDAR and EDAC, all the way from a 6LN to the 6LBR
   across a RPL mesh. Instead, the EDAR/EDAC exchange with the 6LBR is proxied
   by the RPL Root upon a DAO message that refreshes the RPL routing state.
   Any combination of the logical functions of 6LR, Root and 6LBR might be
   collapsed in a single node.

 </t><t>
   To achieve this, the lifetimes and
   sequence counters in 6LoWPAN ND and RPL are aligned. In other words, the Path
   Sequence and the Path Lifetime in the DAO message are taken from the
   Transaction ID and the Address Registration lifetime in the NS(EARO) message
   from the 6LN.

 </t><t>
   In a RPL
   network where the function is enabled, refreshing the state in the 6LBR is
   the responsibility of the Root. Consequently, only addresses that are
   injected in RPL will be kept alive by the RPL Root.
   In a same fashion, if an additional routing
   protocol is deployed on a same network, that additional routing protocol may
   need to handle the keep alive procedure for the addresses that it serves.

</t><t>
   On the first Address Registration, illustrated in <xref target='fReg1'/>
   for RPL Non-Storing Mode, the Extended Duplicate Address exchange takes place
   as prescribed by <xref target='RFC8505'/>. If the exchange fails, the 6LR returns an NA message with a negative status to the 6LN, the NCE is not created and the address is not injected in RPL.

   If it is successful, the 6LR creates an NCE and injects the Registered
   Address in the RPL routing  using a DAO/DAO-ACK exchange with the RPL DODAG
   Root.

</t><t>
   The 6LN signals the termination of a registration with a 6LR using an
   NS(EARO) with a Registration Lifetime set to 0. Upon this, the 6LR ensures that an EDAR/EDAC exchange happens to clean up the state at the 6LBR, either directly as shown in <xref target='fReg1A'/>, or, if the Root sets the "P" flag, by setting the ROVR in the RPL Target Option.
 </t>
<t>
    Since RULs are advertised using Non-Storing Mode, the DAO message flow can
    be nested within the Address Registration flow as illustrated in
    <xref target='fReg1'/>.
 </t>
 <figure anchor='fReg1' suppress-title='false'><name>First RUL Registration Flow</name>
 <artwork align="center"><![CDATA[
   6LN/RUL            6LR            Root               6LBR
      |                |              |                   |
      |   NS(EARO)     |              |                   |
      |--------------->|                                  |
      |                |          Extended DAR            |
      |                |--------------------------------->|
      |                |                                  |
      |                |          Extended DAC            |
      |                |<---------------------------------|
      |                |      DAO     |                   |
      |                |------------->|                   |
      |                |              | (anonymous) EDAR  |
      |                |              |------------------>|
      |                |              |       EDAC        |
      |                |              |<------------------|
      |                |    DAO-ACK   |                   |
      |                |<-------------|                   |
      |   NA(EARO)     |              |                   |
      |<---------------|              |                   |
      |                |              |                   |
    ]]></artwork>
 </figure>
 <t>
   An issue may be detected later, e.g., the address moves within the LLN or to
   a different Root on a backbone <xref target='I-D.ietf-6lo-backbone-router'/>.
   In that case the value of the status that indicates the issue can be passed
   from 6LoWPAN ND to RPL and back as illustrated in <xref target='fReg1.5'/>.
 </t>
 <figure anchor='fReg1.5' suppress-title='false'><name>Asynchronous Issue</name>
 <artwork align="center"><![CDATA[
   6LN/RUL              6LR           Root              6LBR
      |                  |             |                  |
      |                  |             | NA(EARO, Status) |
      |                  |             |<-----------------|
      |                  | DCO(Status) |                  |
      |                  |<------------|                  |
      | NA(EARO, Status) |             |                  |
      |<-----------------|             |                  |
      |                  |             |                  |
    ]]></artwork>
 </figure>
 <t>
    An Address re-Registration is performed by the 6LN to maintain the NCE in the 6LR
    alive before lifetime expires. Upon an Address  re-Registration, as
    illustrated in <xref target='fReg2'/>,
    the 6LR redistributes the Registered Address NS(EARO) in RPL.
 </t>
 <figure anchor='fReg2' suppress-title='false'><name>Next RUL Registration Flow</name>
 <artwork align="center"><![CDATA[
   6LN/RUL            6LR            Root               6LBR
      |                |              |                   |
      |   NS(EARO)     |              |                   |
      |--------------->|                                  |
      |                |      DAO     |                   |
      |                |------------->|                   |
      |                |              | (anonymous) EDAR  |
      |                |              |------------------>|
      |                |              |       EDAC        |
      |                |              |<------------------|
      |                |    DAO-ACK   |                   |
      |                |<-------------|                   |
      |   NA(EARO)     |              |                   |
      |<---------------|              |                   |
    ]]></artwork>
 </figure><t>
    This causes the RPL DODAG Root to refresh the state in the 6LBR with an
    EDAC message or an anonymous EDAC if the ROVR is not indicated in the
    Target Option. In both cases, the EDAC message sent in response by the 6LBR
    contains the actual value of the ROVR field for that Address Registration.
    In case of an error on the proxied EDAR flow, the error MUST be
    returned in the DAO-ACK - if one was requested - using a RPL Status with the 'A' flag set that imbeds a 6LoWPAN Status value as discussed in <xref target='stat'/>.

 </t> <t>
    If the Root could not return the negative Status in a DAO-ACK then it
    sends an asynchronous Destination Cleanup Object (DCO) message
    <xref target='I-D.ietf-roll-efficient-npdao'/> directly to the 6LR by
    placing the
    negative Status in the RPL Status with the 'A' flag set. Note that if both
    are used in a short
    interval of time, the DAO-ACK and DCO messages are not guaranteed to arrive
    in the same order at the 6LR.

 </t> <t>
    The 6LR may receive a requested DAO-ACK even after it received a
    DCO, but the negative Status in the DCO supercedes a positive
    Status in the DAO-ACK regardless of the order in which they are received.
    Upon the DAO-ACK - or the DCO if it arrives first - the 6LR responds to the
    RUL with an NA(EARO). If the RPL Status has the 'A' flag set, then the ND
    Status is extracted and passed in the EARO; else, if the 'E' flag is set,
    indicating a rejection, then the status 4 "Removed" is used; else, the
    ND Status of 0 indicating "Success" is used.

 </t> <t>
    The RUL may terminate the registration at anytime by using a Registration
    Lifetime of 0.
    This specification expects that the RPL Target option transports a ROVR.
    If that is the case, the normal heartbeat flow is sufficient to inform the
    6LBR using the Root as proxy as illustrated in <xref target="fReg2"/>.
    If the 6LR could not add the ROVR to the DAO message, then it MUST inform
    the 6LBR separately using as illustrated in <xref target="fReg1A"/>.
</t>
 <figure anchor='fReg1A' suppress-title='false'><name>Last RUL Registration Flow, No ROVR</name>
 <artwork align="center"><![CDATA[
6LN/RUL           6LR                Root               6LBR
  |                |                  |                   |
  |NS(EARO,Lifet=0)|                  |                   |
  |--------------->|                                      |
  |                |            Extended DAR              |
  |                |------------------------------------->|
  |                |                                      |
  |                |            Extended DAC              |
  |                |<-------------------------------------|
  |                | DAO (Lifetime=0) |                   |
  |                |----------------->|                   |
  |                |                  |  anonymous EDAR   |
  |                |                  |------------------>|
  |                |                  |       EDAC        |
  |                |                  |<------------------|
  |                |      DAO-ACK     |                   |
  |                |<-----------------|                   |
  |   NA(EARO)     |                  |                   |
  |<---------------|                  |                   |
  |                |                  |                   |
  |           <Remove NCE>            |                   |
  |                |                  |                   |
]]></artwork>
 </figure>


</section>
<section anchor='oper'><name>Detailed Operation</name>


<section anchor='ln'><name>Perspective of the RUL Acting as 6LN</name>
<t>
  This specification does not alter the operation of a 6LoWPAN ND-compliant 6LN,
  and a RUL is expected to operate as follows:
</t>
<ol spacing='normal'><li>
   The 6LN obtains an IPv6 global address, either using Stateless Address Autoconfiguration (SLAAC) <xref target='RFC4862'/> based on a Prefix
   Information Option (PIO) <xref target='RFC4861'/> found in an RA message, or
   some other means such as DHCPv6 <xref target='RFC3315'/>.

</li><li>
   Once it has formed an address, the 6LN (re)registers its address periodically,
   within the Lifetime of the previous Address Registration, as prescribed by
   <xref target='RFC6775'/> and <xref target='RFC8505'/>, to refresh the NCE
   before the lifetime indicated in the EARO expires. The TID is
   incremented each time and wraps in a lollipop fashion (see section 5.2.1
   of <xref target='RFC8505'/> which is fully compatible with section 7.2 of
   <xref target='RFC6550'/>).
</li><li>
   As stated in section 5.2 of <xref target='RFC8505'/>, the 6LN can register
   to more than one 6LR at the same time. In that case, it
   MUST use the same value of TID for all of the parallel Address Registrations. The 6LN should send the registration(s) with a non-zero Registration Lifetime
   and ensure that one succeeds before it terminates other registrations to
   maintain the state in the network and at the 6LBR and minimize the churn.

</li><li>
   Following section 5.1 of <xref target='RFC8505'/>,
   a 6LN acting as a RUL sets the "R" flag in the EARO of at least one
   registration, whereas acting as an RAN it never does. If the "R" flag is not
   echoed in the NA, the RUL SHOULD attempt to use another 6LR. The 6LN should send the registration(s) with the "R" flag set and ensure that one succeeds
   before it sends the registrations with the flag reset. In case of a conflict
   with the preceeding rule on lifetime, the rule on lifetime has precedence.

</li><li>
   The 6LN may use any of the 6LRs to which it registered as default gateway.
   Using a 6LR to which the 6LN is not registered may result in packets dropped
   at the 6LR by a Source Address Validation function (SAVI) so it is not recommended.
</li>

</ol>

<t>
   Even without support for RPL, a RUL may be aware of opaque values to be
   provided to the routing protocol. If the RUL has a knowledge of the RPL
   Instance the packet should be injected into, then it SHOULD set the Opaque
   field in the EARO to the RPLInstanceID, else it MUST leave the Opaque field
   to zero.
</t>
<t>
   Regardless of the setting of the Opaque field, the 6LN MUST set the "I"
   field to zero to signal "topological information to be passed to a routing
   process" as specified in section 5.1 of <xref target='RFC8505'/>.
</t><t>
   A RUL is not expected to produce RPL artifacts in the data packets, but it
   MAY do so. For instance, if the RUL has a minimal awareness of the RPL
   Instance then it can build an RPI. A RUL that places an RPI in a data packet
   MUST indicate the RPLInstanceID of the RPL Instance where the
   packet should be forwarded. All the flags and the Rank field are set
   to zero as specified by section 11.2 of <xref target='RFC6550'/>.
</t>
</section>




<section anchor='lr'><name>Perspective of the RPL Border Router Acting as 6LR</name>
<t>
   Also as prescribed by <xref target='RFC8505'/>,
   the 6LR generates an EDAR message upon reception of a valid NS(EARO)
   message for the registration of a new IPv6 Address by a 6LN.
   If the initial EDAR/EDAC exchange succeeds, then the 6LR installs an NCE
   for the Registration Lifetime. For the refreshes of the registration, if the RPL Root has indicated that it proxies the keep-alive EDAR/EDAC exchange with the 6LBR (see <xref target='upd'/>), the 6LR MUST refrain from sending the keep-alive EDAR itself.
</t>

<t>
   If the "R" flag is set in the NS(EARO), the 6LR SHOULD attempt to inject the
   host route in RPL, unless this is barred for other reasons, like a saturation
   of the network or if its RPL parent. The 6LR MUST use a RPL Non-Storing Mode
   signaling.
</t>
<t>
   The 6LR SHOULD request a DAO-ACK, failure to do so may incur an asynchronous
   error flow that will tear down a state just installed with the RUL.
   The 6LR MUST set "R" flag in the NA(EARO) back if and only if it injected the
   Registered Address in the RPL routing. If a DAO-ACK was requested, this is
   done upon receiving the DAO-ACK from the Root with a positive status.
</t>

<t>
   The 6LR may at any time send a unicast asynchronous NA(EARO) with the "R" flag reset to signal that it stops providing routing services, and/or with the EARO Status 2 "Neighbor Cache full" to signal that it removes the NCE. It may also send a final RA, unicast or multicast, with a Router Lifetime field of zero, to signal that it stops serving as router, as specified in section 6.2.5 of <xref target='RFC4861'/>.
</t>


 <t>
   The Opaque field in the EARO hints the 6LR on the RPL Instance that SHOULD
   be used for the DAO advertisements, and for the forwarding of packets sourced
   at the registered address when there is no RPI in the packet, in which case
   the 6LR MUST encapsulate the packet to the Root adding an RPI in the
   outer header.
   If the Opaque field is zero, the 6LR is free to use the default RPL Instance
   (zero) for the registered address or to select an Instance of its choice.
</t> <t>
   if the "I" field is not zero, then the 6LR MUST consider that the Opaque
   field is zero. If the Opaque field is not zero, then it is expected to
   carry a RPLInstanceID for the RPL Instance suggested by the 6LN.
   If the 6LR does not participate to the associated Instance, then the 6LR MUST
   consider that the Opaque field is zero;
   else, that is if the 6LR participates to the suggested Instance, then the
   6LR SHOULD use that Instance for the registered address.
</t>
<t>
  The DAO message advertising the Registered Address MUST be constructed as
  follows:
  </t>
<ol spacing='normal'>
  <li>The Registered Address is signaled as Target Prefix in the RPL Target Option in the DAO message; the Prefix Length is set to 128
  </li><li>
  RPL Non-Storing Mode is to be used. The 6LR indicates one of its global or unique-local IPv6 unicast addresses as the Parent Address in the associated RPL Transit Information Option (TIO)
  </li><li>
  the External 'E' flag in the TIO is set to indicate that the 6LR redistributes
  an external target into the RPL network

  </li><li>
  the Path Lifetime in the TIO is computed from the Lifetime in the EARO
  Option. This adapts it to the Lifetime Units used in the RPL operation;
  note that if the lifetime is 0, then the 6LR generates a No-Path DAO
  message that cleans up the routes down to the Address of the 6LN; this also causes the Root as a proxy to send an EDAR message to the 6LBR with a
  Lifetime of 0.
  </li><li>
  the Path Sequence in the TIO is set to the TID value found in the EARO option.
  </li>

</ol>
<t>
   The NCE is removed if the 6LR tries to inject the route
   is RPL and fails for reasons related to ND, which is recognized by both the
   'E' and the 'A' flags set in the RPL Status of the DAO-ACK or the DCO, as detailed below.
 </t><t>
   Otherwise, success injecting the route is assumed if a DAO-ACK was not requested or if it is received with a RPL Status that is not a rejection (i.e., the 'E' flag not set).
 </t><t>
   In case of success, if the 'A' flag is set in the RPL Status of the DAO-ACK, then the 6LR MUST use the Status Value in the RPL Status for the Status in the NA(EARO), else a Status of 0 (Success) is returned.

 </t><t>
   The status of 0 MUST also be used if the 6LR could not
   even try to inject the route - note that the "R" flag is reset in that case.
</t>
<t>
   In a network where Address Protected Neighbor Discovery (AP-ND) is enabled,
   in case of a DAO-ACK or a DCO indicating transporting an EARO
   Status Value of 5 (Validation Requested), the 6LR MUST
   challenge the 6LN for ownership of the address, as described in section
   6.1 of <xref target='I-D.ietf-6lo-ap-nd'/>, before the Registration is
   complete. This ensures that the address validated before it is injected in
   RPL.
</t>
<t>
   If the challenge succeeds then the operations continue as normal.
   In particular a DAO message is generated
   upon the NS(EARO) that proves the ownership of the address. If the challenge
   failed, the 6LR rejects the registration as prescribed by AP-ND and may take
   actions to protect itself against DoS attacks by a rogue 6LN, see
   <xref target='security-considerations'/>.
</t>
<t>
   The other rejection codes indicate that the 6LR failed to inject the address
   into the RPL network. If an EARO Status is transported, the 6LR MUST send a
   NA(EARO) to the RUL with that Status value, and the "R" flag not set. Similarly, upon receiving a DCO message indicating that the address of a RUL
   should be removed from the routing table, the 6LR issues an asynchronous NA(EARO) to the RUL with the embedded ND Status value if there was one, and
   the "R" flag not set.
</t>
<t>

   If a 6LR receives a valid NS(EARO) message with the "R" flag reset and a
   Registration Lifetime that is not 0, and the 6LR
   was redistributing the Registered Address due to previous NS(EARO) messages
   with the flag set, then it MUST stop injecting the address.
   It is up to the Registering 6LN to maintain the corresponding route from then
   on, either keeping it active via a different 6LR or by acting as an RAN and
   managing its own reachability.

</t>


</section>

<section anchor='Root'><name>Perspective of the RPL Root</name>

<t>
   A RPL Root SHOULD set the "P" flag in the RPL configuration option of the DIO
   messages that it generates (see <xref target='upd'/>) to signal that it
   proxies the EDAR/EDAC exchange and supports the Updated RPL Target
   option. The remainder of this section assumes that it does.

</t><t>
   Upon reception of a DAO message, for each RPL Target option that creates or
   updates an existing RPL state, the Root MUST notify the 6LBR. This can be
   done using an internal API if they are co-located, or using a proxied
   EDAR/EDAC exchange if they are separated.

</t>
<t>
   Upon receiving an EDAC message from the 6LBR, if a DAO is pending, then the
   Root MUST send a DAO-ACK back to the 6LR. Else, if the Status in the EDAC message is not "Success", then it MUST send an asynchronous DCO to the 6LR.
   In either case, the EDAC Status is embedded in the RPL Status with the 'A'
   flag set.
</t>


  <t>
  The EDAR message MUST be constructed as follows:
  </t>
<ol spacing='normal'>
  <li>
  The Target IPv6 address from the RPL Target Option is placed in the
  Registered Address field of the EDAR message;
  <!--and in the Target field of the NS message, respectively-->
  </li><li>
  the Registration Lifetime is adapted from the Path Lifetime in the TIO by
  converting the Lifetime Units used in RPL into units of 60 seconds used in the
  6LoWPAN ND messages;
  </li><li>
  <!--
  the RPL Root indicates its own MAC Address as Source Link Layer Address (SLLA)
  in the NS(EARO);
  </li><li>
  -->
  the TID value is set to the Path Sequence in the TIO and indicated with an ICMP
  code of 1 in the EDAR message;
  </li><li>
  If the ROVR is present in the RPL Target option, it is copied as is in the
  EDAR and the ICMP Code Suffix is set to the appropriate value as shown in
  Table 4 of <xref target='RFC8505'/> depending on the size of the ROVR field;
  else, the ROVR field in the EDAR is set to zero indicating an anonymous EDAR.
  </li>
</ol>


</section>

<section anchor='lbr'><name>Perspective of the 6LBR</name>


<t>
   Upon reception of an EDAR message with the ROVR field set to a non-zero value,
   the 6LBR acts as prescribed by <xref target='RFC8505'/> and returns an EDAC message to the sender.
</t>
<t>
   If the ROVR is set to 0, indicating an anonymous EDAR, the 6LBR MUST act as below:
</t>

<ol>
<li>
   The 6LBR checks whether an entry exists for the address.
   If the entry does not exist, the 6LBR MUST NOT create the entry, and it MUST
   answer with a Status "Removed" in the EDAC message.
   If the entry exists, the 6LBR computes whether the TID in the EDAR message is
   fresher than the one in the entry as prescribed in section 4.2.1 of
   <xref target='RFC8505'/>, and continues as follows:
</li><li>
   If the anonymous EDAR message is fresher, the 6LBR updates the TID in the
   entry, restarts the heartbeat timer for the entry, and answers with a Status
   "Success" in the EDAC message.
   If the value of the Registration Lifetime is smaller than the value in the
   entry, then the latter value MUST be used for the heartbeat; this means in
   particular that the Registration Lifetime of 0 is ignored. Conversely, if the
   duration of the Lifetime is extended by the Registration Lifetime in the EDAR
   message, it is used for the hearbeat and to the value in the entry is updated.

</li><li>
   If the TID in the entry is the same or fresher, the 6LBR does not update the entry, and answers with a Status "Success" and "Moved" in the EDAC message,
   respectively.
</li>

</ol>
<t>
   The EDAC that is constructed is the same as if the anonymous EDAR was a full
   EDAR, but for the ROVR that is set to zero.
</t>

</section>
</section>

</section>




<section anchor='multiop'><name>Protocol Operations for Multicast Addresses</name>

 <t> Section 12 of <xref target='RFC6550'/> details the RPL support for
    multicast flows. This support is not source-specific and only operates as
    an extension to the Storing Mode of Operation for unicast packets. Note that
    it is the RPL model that the multicast packet is passed as a Layer-2 unicast
    to each of the interested children.
    This remains true when forwarding between the 6LR and the listener 6LN.
 </t>
 <t>
 <xref target='RFC2710'>"Multicast Listener Discovery (MLD) for IPv6"</xref>
    and its updated version <xref target='RFC3810'>
    "Multicast Listener Discovery Version 2 (MLDv2) for IPv6"</xref> provide an
    interface for a listener to register to multicast flows.
    MLDv2 is backwards compatible with MLD, and adds in particular the
    capability to filter the sources via black lists and white lists.
    In the MLD model, the Router is a "querier" and the Host is a multicast
    listener that registers to the querier to obtain copies of the particular
    flows it is interested in.


 </t><t>
     On the first Address Registration, as illustrated in <xref target='fReg3'/>, the
     6LN, as an MLD listener, sends an unsolicited Report to the 6LR in order to
     start receiving the flow immediately.

 </t>
 <figure anchor='fReg3' suppress-title='false'><name>First Multicast Registration Flow</name>
 <artwork><![CDATA[
   6LN/RUL                6LR             Root                6LBR
      |                    |               |                    |
      | unsolicited Report |               |                    |
      |------------------->|               |                    |
      |     <L2 ack>       |               |                    |
      |                    | DAO           |                    |
      |                    |-------------->|                    |
      |                    |    DAO-ACK    |                    |
      |                    |<--------------|                    |
      |                    |               | <if not listening> |
      |                    |               | unsolicited Report |
      |                    |               |------------------->|
      |                    |               |                    |
]]></artwork>
 </figure>
 <t> Since multicast Layer-2 messages are
     avoided, it is important that the asynchronous messages for unsolicited
     Report and Done are sent reliably, for instance using a Layer-2
     acknowledgment, or attempted multiple times.
 </t><t>
     The 6LR acts as a generic MLD querier and generates a DAO for the multicast
     target. The lifetime of the DAO is set to be in the order of the Query
     Interval, yet larger to account for variable propagation delays.

 </t><t>
     The Root proxies the MLD exchange as a listener with the 6LBR acting as the
     querier, so as to get packets from a source external to the RPL domain.
     Upon a DAO with a multicast target, the RPL Root checks if it is
     already registered as a listener for that address, and if not, it performs
     its own unsolicited Report for the multicast target.
 </t>
 <t>
    An Address re-Registration is pulled periodically by 6LR acting as querier.
    Note that the message may be sent unicast to all the known individual
    listeners. Upon a
    time out of the Query Interval, the 6LR sends a Query to each of its
    listeners, and gets a Report back that is mapped into a DAO, as illustrated
    in <xref target='fReg4'/>:
 </t>
 <figure anchor='fReg4' suppress-title='false'><name>Next Registration Flow</name>
 <artwork><![CDATA[
   6LN/RUL                6LR             Root                6LBR
      |                    |               |                    |
      |       Query        |               |                    |
      |<-------------------|               |                    |
      |       Report       |               |                    |
      |------------------->|               |                    |
      |     <L2 ack>       |               |                    |
      |                    | DAO           |                    |
      |                    |-------------->|                    |
      |                    |    DAO-ACK    |                    |
      |                    |<--------------|                    |
      |                    |               |                    |
      |                    |               |       Query        |
      |                    |               |<-------------------|
      |                    |               |       Report       |
      |                    |               |------------------->|
      |                    |               |                    |
      |                    |               |                    |
    ]]></artwork>
 </figure>
 <t>Note that any of the functions 6LR, Root and 6LBR might be collapsed in a
    single node, in which case the flow above happens internally, and possibly
    through internal API calls as opposed to messaging.
 </t>
</section>




<section anchor='security-considerations'><name>Security Considerations</name>
 <t>
   First of all, it is worth noting that with <xref target='RFC6550'/>, every
   node in the LLN is RPL-aware and can inject any RPL-based attack in the
   network. This specification isolates edge nodes that can only interact with
   the RPL routers using 6LoWPAN ND, meaning that they cannot perform RPL
   insider attacks.
 </t>
 <t>
   6LoWPAN ND can optionally provide SAVI features with <xref target='I-D.ietf-6lo-ap-nd'/>, which
   reduces even more the attack perimeter that is available to the edge nodes.
 </t>
 <t>
	The LLN nodes depend on the 6LBR and the RPL participants for their
    operation.
	A trust model must be put in place to ensure that the right devices are
	acting in these roles, so as to avoid threats such as black-holing,
        (see <xref target='RFC7416'/> section 7)
	or bombing attack whereby an impersonated 6LBR would destroy state in
	the network by using the "Removed" Status code.

 </t><t>
    This trust model could be
    at a minimum based on a Layer-2 Secure joining and the Link-Layer security.
    This is a generic 6LoWPAN requirement, see Req5.1 in Appendix of <xref target='RFC8505'/>.
 </t><t>
    Additionally, the trust model could include a role validation
    to ensure that the node that claims to be a 6LBR or a RPL Root is entitled
    to do so.
 </t><t>
    The anonymous EDAR message does not carry a valid Registration Unique ID
    <xref target='RFC8505'/> in the form of a ROVR and may be played by any node
    on the network without the need to know the ROVR.
    The 6LBR MUST NOT create an entry based on a
    anonymous EDAR and it MUST NOT decrease the value of the lifetime.
    All it can do is refresh the lifetime and the TID of an existing entry.
    So the message cannot be used to create a binding state in the 6LBR but it
    can be used to maintain one active longer than expected.
 </t><t>
 Note that a full EDAR message
 with a lifetime of 0 will destroy that state and the anonymous message will not recreate it. Note also that a rogue that has access to the network can attack the 6LBR with other (forged) addresses and ROVR, and that this is a much easier DoS
 attack than trying to keep existing state alive longer.
 </t><t>
    At the time of this writing RPL does not have a zerotrust model whereby
    it is possible to validate the origin of an address that is injected
    in a DAO. This specification makes a first step in that direction by
    allowing the Root to challenge the RUL by the 6LR that serves it.
 </t>

</section>


<section anchor='iana-considerations'><name>IANA Considerations</name>




<section anchor="iana-aro"><name>Resizing the ARO Status values</name>
	<t> Section 12 of <xref target='RFC6775'/> creates the
    Address Registration Option Status Values Registry with a range 0-255.
    This specification reduces that range to 0-63.
    </t>
    <t>
   IANA is requested to reduce the unassigned values range from 11-255 to 11-63.
    </t>
</section>

<!-- end section "New ARO Status values" -->



   <section anchor="iana-conf"><name>New DODAG Configuration Option Flag</name>
    <t>
    This specification updates the Registry for the "DODAG Configuration Option
    Flags" that was created for <xref target='RFC6550'/> as follows:
    </t>

   <table  anchor="nexndopt"><name>New DODAG Configuration Option Flag</name>
   <thead>
      <tr><td>Bit Number</td><td>Capability Description</td><td>Reference</td></tr>
   </thead><tbody>
      <tr><td>1</td><td>Root Proxies EDAR/EDAC (P)</td><td>THIS RFC</td></tr>
   </tbody>
   </table>

</section>
<section anchor="iana-full"><name>New RPL Target Option Flag</name>

<t>Section 20.15 of <xref target='RFC6550'/> creates a Registry for the 8-bit
    "RPL Target Option Flags" field.
    IANA is requested to reduce the size of the field in the Registry to 4 bits.
    This specification also defines a new entry in the Registry as follows:
    </t>

   <table  anchor="ianatarget"><name>New RPL Target Option Flag</name>
   <thead>
      <tr><td>Bit Number</td><td>Capability Description</td><td>Reference</td></tr>
   </thead><tbody>
      <tr><td>1</td><td>Advertiser Address in Full (F)</td><td>THIS RFC</td></tr>
   </tbody>
   </table>

   </section>


<section anchor='iana-stats-nonrej'><name>New Subregistry for the RPL Non-Rejection Status values </name>
 <t>
	This specification creates a new Subregistry for the RPL Non-Rejection Status values
    for use in RPL DAO-ACK and DCO messages with the 'A' flag reset, under the ICMPv6 parameters registry.
</t>
<ul spacing='normal'>
  <li> Possible values are 6-bit unsigned integers (0..63).</li>
  <li> Registration procedure is "Standards Action" <xref target='RFC8126'/>.</li>
  <li> Initial allocation is as indicated in <xref target='iana-ack-Status'/>:</li>
</ul>




   <table anchor='iana-ack-Status'><name>Acceptance values of the RPL Status</name>
   <thead>
      <tr><td>Value</td><td>Meaning</td><td>Reference</td></tr>
   </thead><tbody>
      <tr><td>0</td><td>Unqualified acceptance</td><td>RFC 6550</td></tr>
   </tbody>

   </table>
</section>


<section anchor='iana-stats-rej'><name>New Subregistry for the RPL Rejection Status values </name>
 <t>
	This specification creates a new Subregistry for the RPL Rejection Status values
    for use in RPL DAO-ACK and RCO messages with the 'A' flag reset, under the ICMPv6 parameters registry.
</t><ul spacing='normal'>
  <li> Possible values are 6-bit unsigned integers (0..63).</li>
  <li> Registration procedure is "Standards Action" <xref target='RFC8126'/>.</li>
  <li> Initial allocation is as indicated in <xref target='iana-nack-Status'/>:</li>
</ul>




   <table anchor='iana-nack-Status'><name>Rejection values of the RPL Status </name>
   <thead>
      <tr><td>Value</td><td>Meaning</td><td>Reference</td></tr>
   </thead><tbody>
      <tr><td>0</td><td>Unqualified rejection</td><td>This document</td></tr>
   </tbody>

   </table>

</section>

<section anchor='iana-arof'><name>Fixing the Address Registration Option Flags</name>
<t>Section 9.1 of <xref target='RFC8505'/> creates a Registry for the 8-bit
    Address Registration Option Flags field.
    </t>
    <t>
    IANA is requested to rename the first column of the table from "ARO Status" to "Bit number".
</t>
</section>

</section>
<section anchor='Acks'><name>Acknowledgments</name>
<t>
   The authors wish to thank Ines Robles, Georgios Papadopoulos and Rahul Jadhav
   for their reviews and contributions to this document.
  </t>

</section>


  </middle>

 <back>


      <displayreference   target="I-D.ietf-6lo-ap-nd"           to="AP-ND"/>
      <displayreference   target="I-D.ietf-6lo-backbone-router"     to="6BBR"/>
      <displayreference   target="I-D.ietf-roll-useofrplinfo"       to="USEofRPLinfo"/>
      <displayreference   target="I-D.ietf-roll-efficient-npdao"           to="EFFICIENT-NPDAO"/>

 <references><name>Normative References</name>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2710.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3810.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4919.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6550.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6553.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6554.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml'/>
    <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7102.xml'/>
    <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7228.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7400.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8138.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8200.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8505.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-ap-nd.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-roll-useofrplinfo.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-roll-efficient-npdao.xml'/>


 </references>
 <references><name>Informative References</name>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6606.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3315.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6282.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6687.xml'/>
      <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7416.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8025.xml'/>
	  <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8504.xml'/>
      <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-backbone-router.xml'/>
 </references>


<section anchor='u8138'><name>Example Compression</name>

 <t>

 <xref target='rtghc'/> illustrates the case in Storing Mode where the packet
    is received from the Internet, then the Root encapsulates the packet to
    insert the RPI and deliver to the 6LR that is the parent and last hop to the
    final destination, which is not known to support <xref target='RFC8138'/>.

    </t>

     <figure anchor='rtghc'><name>Encapsulation to Parent 6LR in Storing Mode</name>
     <artwork>
<![CDATA[
+-+ ... -+-+ ... +-+- ... -+-+ ... -+-+-+ ... +-+-+ ... -+ ... +-...
|11110001|SRH-6LoRH| RPI-  |IP-in-IP| NH=1      |11110CPP| UDP | UDP
|Page 1  |Type1 S=0| 6LoRH | 6LoRH  |LOWPAN_IPHC| UDP    | hdr |Payld
+-+ ... -+-+ ... +-+- ... -+-+ ... -+-+-+ ... +-+-+ ... -+ ... +-...
         <-4 bytes->                <-        RFC 6282        ->
                                    <-     No RPL artifact ...
        ]]></artwork></figure>

    <t>
    The difference with the example presented in Figure 19 of
    <xref target='RFC8138'/> is the addition of a SRH-6LoRH before the RPI-6LoRH
    to transport the compressed address of the 6LR as the destination address of
    the outer IPv6 header. In the original example the destination IP of the
    outer header was elided and was implicitly the same address as the
    destination of the inner header.

    Type 1 was arbitrarily chosen, and the size of 0 denotes a single address in
    the SRH.
    </t>
    <t>
     In <xref target='rtghc'/>, the source of the IP-in-IP encapsulation is
          the Root, so it is elided in the IP-in-IP 6LoRH. The destination is
          the parent 6LR of the destination of the inner packet so it cannot be
          elided. If the DODAG is operated in Storing Mode, it is the single
          entry in the SRH-6LoRH and the SRH-6LoRH Size is encoded as 0.
          The SRH-6LoRH is the first 6LoRH in the chain.
          In this particular example, the 6LR address can
          be compressed to 2 bytes so a Type of 1 is used.
          It results that the total length of the SRH-6LoRH is 4 bytes.

       </t>
    <t>
          In Non-Storing Mode, the encapsulation from the Root would be similar
          to that represented in <xref target='rtghc'/> with possibly more hops
          in the SRH-6LoRH and possibly multiple SRH-6LoRHs if the various
          addresses in the routing header are not compressed to the same format.
          Note that on the last hop to the parent 6LR, the RH3 is consumed and
          removed from the compressed form, so the use of Non-Storing Mode vs.
          Storing Mode is indistinguishable from the packet format.
       </t>
    <t>
          The SRH-6LoRHs are followed by RPI-6LoRH and then the IP-in-IP 6LoRH.
          When the IP-in-IP 6LoRH is removed, all the 6LoRH Headers that
          precede it are also removed.
          The Paging Dispatch <xref target='RFC8025'/> may also be removed if
          there was no previous Page change to a Page other than 0 or 1, since
          the LOWPAN_IPHC is encoded in the same fashion in the default Page 0
          and in Page 1. The resulting packet to the destination is the inner
          packet compressed with <xref target='RFC6282'/>.
       </t>
</section>
 </back>
</rfc>
